#pragma once

#include <embree2/rtcore.isph>

#include "spheres.isph"

struct Triangle { unsigned int v0, v1, v2, elem; };

enum PrimitiveFlags {
   PFNone = 0,
   PFCone = 1,
   PFArrow = 2,
   PFStartSphere = 4,
   PFEndSphere = 8,
   PFEndSphereSect = 16,
   PFStartDisc = 32,
   PFEndDisc = 64,
};

struct RenderObjectData {

   int t; //!< timestep number
   RTCScene scene; //!< embree scene id for *this* object
   int geomId; //!< embree geometry id of this object's scene
   unsigned int instId; //!< embree instance id of this object's scene

   Triangle *indexBuffer; //< triangle list
   Sphere *spheres; //!< sphere data
   unsigned int *primitiveFlags; //!< bit-wise or of several PrimitiveFlags for each primitive

   unsigned int lighted; //!< whether to use lighting
   unsigned int hasSolidColor; //!< whether object has a color different from default
   unsigned int perPrimitiveMapping; //!< whether color should be applied per primitive
   float solidColor[4]; //!< object color (if there is no texture)

   unsigned int texWidth; //!< size of 1D texture (color table size)
   const unsigned int8 *texData; //!< 1D RGBA texture data (color table)
   const float *texCoords; //!< 1D texture coordinates (mapped data)
};

export void forceRenderObjectDataExport(uniform RenderObjectData *uniform rod);
export void forceExportTrangle(uniform Triangle *uniform triangle);
export void forceExportPrimitiveFlags(uniform PrimitiveFlags *uniform flags);
