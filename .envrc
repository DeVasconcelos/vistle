# use with direnv: https://github.com/zimbatm/direnv

os=$(uname -s|tr A-Z a-z)
case $(uname -m) in
   i*86) arch=32 ;;
   x86_64) arch=64 ;;
   *) arch=$(uname -m) ;;
esac
system="${os}${arch}"

builddir="build-${system}"
if [ "$(which icc 2>/dev/null)" != "" ]; then
   builddir="build-icc"
fi

if [ "$system" = "darwin64" ]; then
   case "$COMPILER" in
      gnu)
      export EXTERNLIBS="${HOME}/covise/extern_libs/lion"
      builddir="build-gcc"
      ;;
      *)
      export EXTERNLIBS="${HOME}/covise/extern_libs/libc++"
      ;;
   esac
   export BOOST_ROOT="${EXTERNLIBS}/boost"
   export OSGDIR="${EXTERNLIBS}/openscenegraph"
   path_add DYLD_LIBRARY_PATH "${OSGDIR}/lib"
   path_add DYLD_FRAMEWORK_PATH "${EXTERNLIBS}/qt4/lib"
   path_add DYLD_LIBRARY_PATH "${EXTERNLIBS}/xercesc/lib"
   path_add DYLD_LIBRARY_PATH "${BOOST_ROOT}/lib"
elif [ "$system" = "linux64" ]; then
   if [ -d /data/extern_libs ]; then
      export EXTERNLIBS="/data/extern_libs/rhel6"
   fi
   export OSGDIR="${EXTERNLIBS}/OpenSceneGraph"
   export OSG_LIBRARY_PATH="${OSGDIR}/lib"
   path_add LD_LIBRARY_PATH "${OSG_LIBRARY_PATH}"
   path_add LD_LIBRARY_PATH "${builddir}/vistle/lib"
   export BOOST_ROOT="${EXTERNLIBS}/boost-svn"
   export BOOST_ROOT="${EXTERNLIBS}/boost"

   if [ -d "${EXTERNLIBS}/libvncserver" ]; then
      path_add LD_LIBRARY_PATH "${EXTERNLIBS}/libvncserver/lib"
   fi
fi

export VMAKE_BUILD="$builddir"
echo Build: "$builddir"

if [ -z "${COVISEDIR}" -a -d "${HOME}/covise" ]; then
   export COVISEDIR=${HOME}/covise
fi

export COVISEDESTDIR="$(pwd -P)/${builddir}"

if [ -z "${ARCHSUFFIX}" ]; then
   export ARCHSUFFIX="$(${COVISEDIR}/bin/print_covise_env ARCHSUFFIX)"
   if [ "$ARCHSUFFIX" == "lion" ]; then
      ARCHSUFFIX=libc++
   fi
fi

export ACK_OPTIONS="--ignore-dir=doc"

export COCONFIG=config-vistle.xml
export COCONFIG="${HOME}/covise/config/config-vistle.xml"

path_add PYTHONPATH vistle/control

if test -d "${builddir}/vistle/bin"; then
   PATH_add "${builddir}/vistle/bin"
fi
