# use with direnv: https://github.com/zimbatm/direnv

os=$(uname -s|tr A-Z a-z)
case $(uname -m) in
   i*86) arch=32 ;;
   x86_64) arch=64 ;;
   *) arch=$(uname -m) ;;
esac

mpi=""
if mpirun -version | grep open-mpi\.org > /dev/null; then
   mpi="-ompi"
fi
system="${os}${arch}"

if [ -z ${MANPATH} ]; then
    export MANPATH="$(man -w)"
fi
path_add MANPATH "$(pwd -P)/3rdparty/IceT/doc/man"

builddir="build-${system}${mpi}"
if [ "$(which icc 2>/dev/null)" != "" ]; then
   builddir="build-icc"
   test -z "${COMPILER}" && COMPILER=intel
fi

if [ "$CRAY_PRGENVGNU" = "loaded" ]; then
   COMPILER=gnu
fi

if [ -z "${COVISEDIR}" -a -d "${HOME}/covise" ]; then
   export COVISEDIR=${HOME}/covise
fi

if [ -z "${COVISEDIR}" ]; then
   export COVISEDIR="$(print_covise_env COVISEDIR)" >/dev/null 2>&1
fi

if [ -z "${ARCHSUFFIX}" ]; then
    if [ -x "${COVISEDIR}/bin/print_covise_env" ]; then
        ARCHSUFFIX="$(${COVISEDIR}/bin/print_covise_env ARCHSUFFIX)"
    fi
fi

if [ -f .flavor ]; then
    FLAVOR="$(cat .flavor)"
    builddir="${builddir}-${FLAVOR}"
fi

if [ -f .release ]; then
    builddir="${builddir}-release"
    if [ "${ARCHSUFFIX%opt}" = "${ARCHSUFFIX}" ]; then
        ARCHSUFFIX="${ARCHSUFFIX}opt"
    fi
fi
echo ARCHSUFFIX=$ARCHSUFFIX
export ARCHSUFFIX

#builddir=build-mvapich

if [ "$system" = "darwin64" ]; then
   case "$COMPILER" in
      gnu)
      export EXTERNLIBS="${HOME}/covise/extern_libs/macos"
      builddir="build-gcc"
      ;;
      *)
      export EXTERNLIBS="$($COVISEDIR/bin/print_covise_env EXTERNLIBS)"
      ;;
   esac
   #export OSGDIR="${EXTERNLIBS}/openscenegraph"
   #path_add DYLD_LIBRARY_PATH "${OSGDIR}/lib"
   #path_add DYLD_LIBRARY_PATH "${EXTERNLIBS}/xercesc/lib"
   #path_add DYLD_LIBRARY_PATH "${EXTERNLIBS}/embree/lib"
   path_add DYLD_LIBRARY_PATH "/usr/local/cuda/lib"
   path_add DYLD_LIBRARY_PATH "${COVISEDIR}/$(${COVISEDIR}/bin/print_covise_env ARCHSUFFIX)/lib"
   path_add DYLD_LIBRARY_PATH "$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)/ALL/lib"
   path_add DYLD_FRAMEWORK_PATH "$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)/ALL"
   path_add DYLD_LIBRARY_PATH "$builddir/lib"
   export VISTLE_DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH"
elif [ "$system" = "linux64" ]; then
   if [ -z "$EXTERNLIBS" ]; then
      if [ -d /data/extern_libs ]; then
         export EXTERNLIBS="/data/extern_libs/${ARCHSUFFIX%opt}"
      fi
   fi
    if [ -d "${PREFIX}" ]; then
        export CMAKE_PREFIX_PATH="${PREFIX}"
        host="${PREFIX##*/}"
        builddir="build-${host}-${COMPILER}"
    fi

   path_add LD_LIBRARY_PATH "$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)/ALL/lib64"
   path_add LD_LIBRARY_PATH "$(${COVISEDIR}/bin/print_covise_env EXTERNLIBS)/ALL/lib"
   path_add LD_LIBRARY_PATH "${COVISEDIR}/$(${COVISEDIR}/bin/print_covise_env ARCHSUFFIX)/lib"
   path_add LD_LIBRARY_PATH "${builddir}/lib"
fi

export VMAKE_BUILD="$builddir"
echo Build: "$builddir"

export COVISEDESTDIR="$(pwd -P)/${builddir}"
export COVISE_PATH="$COVISEDESTDIR:$COVISEDIR"

export ACK_OPTIONS="--ignore-dir=doc"

if test -d "${builddir}/bin"; then
   PATH_add "${builddir}/bin"
fi
